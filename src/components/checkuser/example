import axios from 'axios';
import { useSelector } from 'react-redux';

const handleBuyNow = async (productId) => {
  const currentUser = useSelector((state) => state.user.currentUser);

  if (!currentUser) {
    alert("You need to log in first!");
    return;
  }

  try {
    const res = await axios.post('/api/orders', {
      userId: currentUser.id,    // ðŸ‘ˆ get user id from Redux
      productId: productId,      // ðŸ‘ˆ product user wants to buy
      quantity: 1,               // ðŸ‘ˆ assume 1 for now
    });
    console.log(res.data);
  } catch (error) {
    console.error(error);
  }
};

import express from 'express';
import db from '../database/database.js';

const orderRoute = express.Router();

orderRoute.post('/orders', (req, res) => {
  const { userId, productId, quantity } = req.body;

  if (!userId || !productId || !quantity) {
    return res.status(400).json("All fields are required");
  }

  const qOrder = `
    INSERT INTO orders (user_id, product_id, quantity) 
    VALUES (?, ?, ?)
  `;
  db.query(qOrder, [userId, productId, quantity], (error, data) => {
    if (error) return res.status(500).json(error);
    return res.status(201).json({ message: "Order placed successfully", orderId: data.insertId });
  });
});

export default orderRoute;

